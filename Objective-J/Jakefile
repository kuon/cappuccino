require('./Jake/Base');

var BUILD_DIR = '../Build',
    ENVIRONMENTS = FILE.readdirSync('Environments'),
    sharedSources = new jake.FileList(),
    targets = [];


sharedSources.include('Source/*.js');
sharedSources = sharedSources.toArray();


// Create one set of tasks per environment per configuration
CONFIGURATIONS.forEach(function(configName)
{
    var finalBuildDir = PATH.join(BUILD_DIR, configName, 'Objective-J' );
        intermediateBuildDir = PATH.join(BUILD_DIR, 'Objective-J.build', configName);


    ENVIRONMENTS.forEach(function(env)
    {
        if (!FILE.statSync(PATH.join('Environments', env)).isDirectory())
            return;

        var sourcePath = PATH.join('Environments', env, 'Objective-J.' + env + '.js'),
            envSources = new jake.FileList(),
            flags = ['-ISource', '-IEnvironments/' + env],
            intermediateTarget = PATH.join(intermediateBuildDir, 'Objective-J.' + env + '.js'),
            finalTarget = PATH.join(finalBuildDir, 'Objective-J.' + env + '.js');

        if (configName === 'Debug')
            flags.push('-DDEBUG');

        envSources.include('Environments/' + env + '/*');
        envSources = envSources.toArray();

        tasks.preprocess(intermediateTarget, sourcePath, sharedSources.concat(envSources), {flags:flags});

        if (configName === 'Release')
            tasks.minify(finalTarget, intermediateTarget);
        else
            tasks.copy(finalTarget, intermediateTarget);

        targets.push(finalTarget);

    });


});


var packageDir = PATH.join(BUILD_DIR, 'Packages', 'Objective-J'),
    toolPaths = new jake.FileList();

toolPaths.include('Tools/*.js');
toolPaths.include('Jake/*.js');

toolPaths.toArray().forEach(function(toolPath)
{
    var toolTarget = PATH.join(packageDir, PATH.dirname(toolPath), PATH.basename(toolPath));
    tasks.copy(toolTarget, toolPath);
    targets.push(toolTarget);
});

tasks.nodePackage('npm-package', targets, {buildDirectory: BUILD_DIR, productName: 'Objective-J', install: true});


task('default', ['npm-package']);
