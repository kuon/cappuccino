require('../jakelib/utils.js');

var FILE = require('fs'),
    sharedSources = new jake.FileList(),
    environments = FILE.readdirSync('Environments'),
    environmentTargets = [],
    BUILD_DIR = '../Build/Objective-J';


sharedSources.include('Sources/*.js');
sharedSources = sharedSources.toArray();

desc('Objective-J build directory');
directory(BUILD_DIR);

// Create one task per environment
environments.forEach(function(env)
{
    if (env.search(/^\./) != -1) // Avoid .DS_Store or other invisible files
        return;

    var source = 'Environments/' + env + '/Objective-J.' + env + '.js',
        target = BUILD_DIR + '/Objective-J.' + env + '.js',
        envSources = new jake.FileList(),
        flags = ['-ISources',  '-IEnvironments/' + env];

    environmentTargets.push(target);

    envSources.include('Environments/' + env + '/*');
    envSources = envSources.toArray();

    desc('Preprocess ' + env + 'environment');
    file(target, [BUILD_DIR].concat(sharedSources).concat(envSources), function ()
    {
        cpp(source, target, flags);
    }, {async: true});
});


desc('Default task');
task('default', environmentTargets, function()
{
    console.log('# Objective-J built');
});
